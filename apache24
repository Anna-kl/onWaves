#!/bin/bash

E_DONE=0
E_FEW_ARG=1

. ${HOME}/conf.d/`basename $0`
. /opt/hostpublic/sbin/functions.sh

opts="configtest graceful modules reload"

ENV_APACHE=( "TERM=linux" "LD_LIBRARY_PATH=/opt/${SERVICE_NAME}/current/lib:" "PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin" "PWD=/" "LANG=C" "_=/opt/${SERVICE_NAME}/current/sbin/httpd" "V3W_USER=$(whoami)" "HTTPD_IP=${HTTPD_IP}" HTTPD_PORT="${HTTPD_PORT}" PHPVER="${PHPVER}" PHPVER_MAJOR="${PHPVER/.*}" )

_env_cleanup ()
{
    ENV_CLEAN=`env | egrep -v 'PATH|SERVICE_NAME' | awk -F '=' '/^[A-Z]/ {print$1}'`
    for ENV_VAR in $ENV_CLEAN
    do
        unset $ENV_VAR >/dev/null 2>&1
    done

    i=0
    while [ "$i" -lt "${#ENV_APACHE[@]}" ]
    do
        ENV_ARGV+="${ENV_APACHE[$i]} "
        let "i = $i + 1"
    done
}

test_service_state() {
    case "$2" in
    "started" )
        [ -f ${PIDFILE} ] && ps -p $(cat ${PIDFILE}) >/dev/null && return 0
    ;;
    * )
        return 1
    ;;
    esac
}

service_started() {
    test_service_state "$1" "started"
}

configtest() {
        ebegin "Checking ${SVCNAME} configuration"
        checkconfig
        eend $?
}

checkconfd() {
        _env_cleanup
        PIDFILE="${PIDFILE:-/var/run/apache2.pid}"

        [ ! -s ${PIDFILE} ] && rm -f ${PIDFILE} > /dev/null

        TIMEOUT=${TIMEOUT:-10}

        SERVERROOT="${SERVERROOT:-/usr/lib/apache2}"
        if [ ! -d ${SERVERROOT} ]; then
                eerror "SERVERROOT does not exist: ${SERVERROOT}"
                return 1
        fi

        CONFIGFILE="${CONFIGFILE:-/etc/apache2/httpd.conf}"
        [ "${CONFIGFILE#/}" = "${CONFIGFILE}" ] && CONFIGFILE="${SERVERROOT}/${CONFIGFILE}"
        if [ ! -r "${CONFIGFILE}" ]; then
                eerror "Unable to read configuration file: ${CONFIGFILE}"
                return 1
        fi

        APACHE2_OPTS="${APACHE2_OPTS} -d ${SERVERROOT}"
        APACHE2_OPTS="${APACHE2_OPTS} -f ${CONFIGFILE}"
        [ -n "${STARTUPERRORLOG}" ] && APACHE2_OPTS="${APACHE2_OPTS} -E ${STARTUPERRORLOG}"

        APACHE2="/opt/${SERVICE_NAME}/current/sbin/httpd"
}

checkconfig() {
        checkconfd || return 1

        /usr/bin/env -i ${ENV_ARGV} ${APACHE2} ${APACHE2_OPTS} -t 1>/dev/null 2>&1
        ret=$?
        if [ $ret -ne 0 ]; then
                eerror "${SVCNAME} has detected a syntax error in your configuration files:"
                /usr/bin/env -i ${ENV_ARGV} ${APACHE2} ${APACHE2_OPTS} -t
        fi

        return $ret
}

start() {
        checkconfig || return 1

        [ -f /var/log/apache2/ssl_scache ] && rm /var/log/apache2/ssl_scache

        ebegin "Starting ${SVCNAME}"
        /usr/bin/env -i ${ENV_ARGV} ${APACHE2} ${APACHE2_OPTS} -k start

        let i=0
        while [ ! -e "${PIDFILE}" ] && [ $i -lt ${TIMEOUT} ]; do
                sleep 1 && i=$(expr $i + 1)
        done

        test $i -le ${TIMEOUT}
        eend $?
}

stop() {
        checkconfd || return 1

        ebegin "Stopping ${SVCNAME}"
        killall -9 httpd >/dev/null 2>&1

        let i=0
        while ps hax | grep -q "[0-9] ${APACHE2}" >/dev/null && [ $i -lt ${TIMEOUT} ];
        do
            sleep 1 && i=$(expr $i + 1)
        done

        test $i -le ${TIMEOUT}
        eend $?
}

reload() {
        RELOAD_TYPE="${RELOAD_TYPE:-graceful}"

        checkconfig || return 1
        service_started "${SVCNAME}" || return

        if [ "${RELOAD_TYPE}" = "restart" ]; then
                ebegin "Restarting ${SVCNAME}"
                ${APACHE2} ${APACHE2_OPTS} -k restart
                eend $?
        elif [ "${RELOAD_TYPE}" = "graceful" ]; then
                ebegin "Gracefully restarting ${SVCNAME}"
                /usr/bin/env -i ${ENV_ARGV} ${APACHE2} ${APACHE2_OPTS} -k graceful
                eend $?
        else
                eerror "${RELOAD_TYPE} is not a valid RELOAD_TYPE. Please edit /etc/conf.d/${SVCNAME}"
        fi
}

graceful() {
        checkconfig || return 1
        service_started "${SVCNAME}" || return
        ebegin "Gracefully restarting ${SVCNAME}"
        ${APACHE2} ${APACHE2_OPTS} -k graceful
        eend $?
}

gracefulstop() {
        checkconfig || return 1

        # zap!
        if service_started "${SVCNAME}"; then
                mark_service_stopped "${SVCNAME}"
        fi

        ebegin "Gracefully stopping ${SVCNAME}"
        ${APACHE2} ${APACHE2_OPTS} -k graceful-stop
        eend $?
}

modules() {
        checkconfig || return 1

        ${APACHE2} ${APACHE2_OPTS} -M 2>&1
}

fullstatus() {
        LYNX="${LYNX:-lynx -dump}"
        STATUSURL="${STATUSURL:-http://localhost/server-status}"

        if ! service_started "${SVCNAME}"; then
                eerror "${SVCNAME} not started"
        elif ! type -p ${LYNX} 2>&1 >/dev/null; then
                eerror "lynx not found! you need to emerge www-client/lynx"
        else
                ${LYNX} ${STATUSURL}
        fi
}

configdump() {
        LYNX="${LYNX:-lynx -dump}"
        INFOURL="${INFOURL:-http://localhost/server-info}"

        checkconfd || return 1

        if ! service_started "${SVCNAME}"; then
                eerror "${SVCNAME} not started"
        elif ! type -p ${LYNX} 2>&1 >/dev/null; then
                eerror "lynx not found! you need to emerge www-client/lynx"
        else
                echo "${APACHE2} started with '${APACHE2_OPTS}'"
                for i in config server list; do
                        ${LYNX} "${INFOURL}/?${i}" | sed '/Apache Server Information/d;/^[[:space:]]\+[_]\+$/Q'
                done
        fi
}

help()  {
    echo -e "\n${WARN}`basename $0`${NORMAL} - ${BRACKET}Managing Web-server Apache 2.\n"
    echo -e "${HILITE}Usage: ${NORMAL}~/init.d/`basename $0` < ${GOOD}options${GOOD}${NORMAL} >\n"
    echo -e "${HILITE}Normal Options:"
    echo -e "\t${GOOD}start stop restart"
    echo -e "\t${NORMAL} Default init.d options.\n"
    echo -e "${HILITE}Additional Options:"
    echo -e "\t${GOOD}configtest graceful modules reload"
    echo -e "\t${NORMAL} Extra options supported by this init.d script.\n"
    echo -e "${HILITE}Configuration files:${NORMAL}"
    echo -e "\t ~/conf.d/apache2\t~/.apache2\n"
}

case "$1" in
"" )
    help
    exit $E_FEW_ARG
    ;;
"start" )
    start
    ;;
"stop" )
    stop
    ;;
"restart" )
    stop && sleep 3 && start
    ;;
"configtest" )
    configtest
    ;;
"reload" )
    reload
    ;;
"graceful" )
    reload
    ;;
"modules" )
    modules
    ;;
"help" )
    help
    ;;
* )
    help
    exit $E_FEW_ARG
    ;;
esac
